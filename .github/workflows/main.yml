# name: Main foodgram workflow

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:13.10
#         env:
#           POSTGRES_USER: django_user
#           POSTGRES_PASSWORD: django_password
#           POSTGRES_DB: django_db
#         ports:
#           - 5432:5432
#         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.9

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip 
#         pip install flake8==6.0.0
#         pip install -r ./backend/requirements.txt 
#     - name: Test with flake8
#       env:
#         POSTGRES_USER: django_user
#         POSTGRES_PASSWORD: django_password
#         POSTGRES_DB: django_db
#         DB_HOST: 127.0.0.1
#         DB_PORT: 5432
#       run: |
#         python -m flake8 backend/
#         cd backend/

# #   build_and_push_to_docker_hub:
# #     name: Push Docker image to DockerHub
# #     runs-on: ubuntu-latest
# #     needs: tests
# #     steps:
# #       - name: Check out the repo
# #         uses: actions/checkout@v3
# #       - name: Set up Docker Buildx
# #         uses: docker/setup-buildx-action@v2
# #       - name: Login to Docker 
# #         uses: docker/login-action@v2
# #         with:
# #             username: ${{ secrets.DOCKER_USERNAME }}
# #             password: ${{ secrets.DOCKER_PASSWORD }}
# #       - name: Push to DockerHub backend
# #         uses: docker/build-push-action@v4
# #         with:
# #           context: ./backend/
# #           push: true
# #           tags: lisaperevalova/foodgram_backend:latest

#   build_frontend_and_push_to_docker_hub:
#     name: Push frontend Docker image to DockerHub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Login to Docker 
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to DockerHub frontend
#         uses: docker/build-push-action@v4
#         with:
#           context: ./frontend/
#           push: true
#           tags: lisaperevalova/foodgram_frontend:latest

#   build_gateway_and_push_to_docker_hub:
#     name: Push gateway Docker image to DockerHub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Login to Docker 
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to DockerHub gateway
#         uses: docker/build-push-action@v4
#         with:
#           context: ./nginx/
#           push: true
#           tags: lisaperevalova/foodgram_gateway:latest

# #   deploy:
# #     runs-on: ubuntu-latest
# #     needs: 
# #       - build_and_push_to_docker_hub
# #       - build_frontend_and_push_to_docker_hub
# #       - build_gateway_and_push_to_docker_hub
# #     steps:
# #     - name: Checkout repo
# #       uses: actions/checkout@v3
# #     - name: Copy docker-compose.yml via ssh
# #       uses: appleboy/scp-action@master
# #       with:
# #         host: ${{ secrets.HOST }}
# #         username: ${{ secrets.USER }}
# #         key: ${{ secrets.SSH_KEY }}
# #         passphrase: ${{ secrets.SSH_PASSPHRASE }}
# #         source: "docker-compose.production.yml"
# #         target: "backend"
# #     - name: Executing remote ssh commands to deploy
# #       uses: appleboy/ssh-action@master
# #       with:
# #         host: ${{ secrets.HOST }}
# #         username: ${{ secrets.USER }}
# #         key: ${{ secrets.SSH_KEY }}
# #         passphrase: ${{ secrets.SSH_PASSPHRASE }}
# #         script: |
# #           cd foodgram
# #           # Выполняет pull образов с Docker Hub
# #           sudo docker compose -f docker-compose.production.yml down
# #           sudo docker compose -f docker-compose.production.yml pull
# #           # Перезапускает все контейнеры в Docker Compose
# #           sudo docker compose -f docker-compose.production.yml up -d
# #           # Выполняет миграции и сбор статики
# #           sudo docker compose -f docker-compose.production.yml exec backend python manage.py makemigrations
# #           sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
# #           sudo docker compose -f docker-compose.production.yml exec backend python manage.py load_ingredients
# #           sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
# #           sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
# #   send_message:
# #     runs-on: ubuntu-latest
# #     needs: deploy
# #     steps:
# #     - name: Send message
# #       uses: appleboy/telegram-action@master
# #       with:
# #         to: ${{ secrets.TELEGRAM_TO }}
# #         token: ${{ secrets.TELEGRAM_TOKEN }}
# #         message: Деплой успешно выполнен!
name: Main foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  copy_files_to_server:
    name: Copy infra and docs
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2

    - name: Create projects directory
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PRIVATE_KEY }}
        command: cd projects && mkdir -p foodgram && mkdir -p foodgram/docs

    - name: Copy infra files
      uses: garygrossgarten/github-action-scp@release
      with:
          local: infra/
          remote: /${{ secrets.USERNAME }}/projects/foodgram/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.PRIVATE_KEY }}

    - name: Copy docs
      uses: garygrossgarten/github-action-scp@release
      with:
          local: docs
          remote: /${{ secrets.USERNAME }}/projects/foodgram/docs/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.PRIVATE_KEY }}

  build_push_backend_to_DockerHub:
    name: Building back image and pushing it to Docker Hub
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Push "foodgram/backend" to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: backend/
        push: true
        tags: ${{ secrets.DOCKER_USER }}/foodgram_back:latest

  build_push_frontend_to_DockerHub:
    name: Building front image and pushing it to Docker Hub
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Push "foodgram/frontend" to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: frontend/
        push: true
        tags: ${{ secrets.DOCKER_USER }}/foodgram_front:latest

  deploy:
    runs-on: ubuntu-22.04
    needs:
      - copy_files_to_server
      - build_push_backend_to_DockerHub
      - build_push_frontend_to_DockerHub
    steps:
    - name: remote ssh commands to deploy
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PRIVATE_KEY }}
        command: |
          cd projects/foodgram/
          echo DEBUG=${{ secrets.DEBUG }} > .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env

          sudo docker-compose stop
          sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
          sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_front
          sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_back
          sudo docker-compose up -d
          sudo docker image prune -a
          rm -f .env

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой успешно выполнен!
